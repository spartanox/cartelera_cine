/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import utilidades.Convertidor_utilidades;
import utilidades.Fecha_utilidades;
import utilidades.Identificador;
import utilidades.JtextField_utilidades;
import utilidades.Tabla_utilidades;
import entidades.Boleto;
import entidades.Cine;
import entidades.Cliente;
import entidades.Factura;
import entidades.Pelicula;
import java.time.LocalDate;
import java.time.Month;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class Principal extends javax.swing.JFrame {

  String INICIO_SESION_CANCELADO = "";
  Cine cine;
  Factura factura;

  /**
   * Creates new form Principal
   */
  public Principal() {
    initComponents();
    cambiarDePanel(panel_menuPrincipal);
    cine = new Cine();
    Tabla_utilidades.iniciarRendererTabla(tabla_asientosSala);
    Tabla_utilidades.iniciarRendererTabla(tabla_seleccionAsientos);
    factura = new Factura();
    setLocationRelativeTo(null);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        group_tipoTarjeta = new javax.swing.ButtonGroup();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        panel_menu_administrador = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btn_definirCartelera = new javax.swing.JButton();
        btn_estadoSalas = new javax.swing.JButton();
        btn_reporteIngresos = new javax.swing.JButton();
        btn_reporteAsientos = new javax.swing.JButton();
        btn_atrasMenuAdministrador = new javax.swing.JButton();
        panel_menuPrincipal = new javax.swing.JPanel();
        btn_menuAdministrador = new javax.swing.JButton();
        btn_cliente = new javax.swing.JButton();
        jLabel58 = new javax.swing.JLabel();
        panel_ingresoDatosPelicula = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_nombrePelicula = new javax.swing.JTextField();
        btn_agregarPelicula = new javax.swing.JButton();
        btn_limpiarCampos = new javax.swing.JButton();
        combo_mesInicioPelicula = new javax.swing.JComboBox<>();
        combo_anioInicioPelicula = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        combo_numeroSala = new javax.swing.JComboBox<>();
        btn_atrasIngresoPelicula = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabla_peliculasRegistradas = new javax.swing.JTable();
        jLabel51 = new javax.swing.JLabel();
        btn_eliminarPelicula = new javax.swing.JButton();
        panel_estadoSala = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        combo_SalaARevisar = new javax.swing.JComboBox<>();
        btn_obtenerDatosSala = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_asientosSala = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        btn_atrasEstadoPelicula = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        label_asientosOcupados = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        label_asientosDisponibles = new javax.swing.JLabel();
        panel_ingresosPorSala = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        btn_atrasIngresoSalas = new javax.swing.JButton();
        txt_ingresosSala1 = new javax.swing.JTextField();
        txt_ingresosSala2 = new javax.swing.JTextField();
        txt_ingresosSala3 = new javax.swing.JTextField();
        panel_asientosReservados = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        btn_atrasAsientosReservados = new javax.swing.JButton();
        txt_asientosReservadosSala1 = new javax.swing.JTextField();
        txt_asientosReservadosSala2 = new javax.swing.JTextField();
        txt_asientosReservadosSala3 = new javax.swing.JTextField();
        panel_seleccionarPelicula = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txt_totalBoletosAdultos = new javax.swing.JTextField();
        txt_totalBoletosAdultosMayores = new javax.swing.JTextField();
        txt_totalBoletosNinios = new javax.swing.JTextField();
        btn_continuarReservaPelicula = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        btn_atrasReservaPelicula = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabla_seleccionPelicula = new javax.swing.JTable();
        txt_montoTotalBoletos = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        panel_seleccionAsientos = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_seleccionAsientos = new javax.swing.JTable();
        btn_continuarSeleccionAsientos = new javax.swing.JButton();
        btn_seleccionarAsiento = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_asientosSeleccionados = new javax.swing.JTable();
        jLabel34 = new javax.swing.JLabel();
        btn_eliminarAsientoSeleccionado = new javax.swing.JButton();
        btn_atrasSeleccionAsientos = new javax.swing.JButton();
        jLabel59 = new javax.swing.JLabel();
        panel_pagoBoletos = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        txt_nombreCliente = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        txt_numeroTarjeta = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        txt_codigoSeguridad = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        combo_mesVencimientoTarjeta = new javax.swing.JComboBox<>();
        jLabel42 = new javax.swing.JLabel();
        combo_anioVencimientoTarjeta = new javax.swing.JComboBox<>();
        jLabel43 = new javax.swing.JLabel();
        txt_totalAPagar = new javax.swing.JTextField();
        btn_continuarPago = new javax.swing.JButton();
        btn_atrasPagoBoletos = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        radio_visa = new javax.swing.JRadioButton();
        radio_mastercard = new javax.swing.JRadioButton();
        panel_factura = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        btn_finalizarCompra = new javax.swing.JButton();
        label_facturaNumeroReservacion = new javax.swing.JLabel();
        label_facturaFecha = new javax.swing.JLabel();
        label_facturaNombreCliente = new javax.swing.JLabel();
        label_facturaTarjeta = new javax.swing.JLabel();
        label_facturaNumeroSala = new javax.swing.JLabel();
        label_facturaNombrePelicula = new javax.swing.JLabel();
        label_facturaTiquetesComprados = new javax.swing.JLabel();
        label_facturaAsientosSeleccionados = new javax.swing.JLabel();
        label_facturaTotalPagado = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 51));
        setMaximumSize(new java.awt.Dimension(726, 391));
        setMinimumSize(new java.awt.Dimension(726, 391));
        setPreferredSize(new java.awt.Dimension(755, 520));
        setResizable(false);
        getContentPane().setLayout(null);

        jLayeredPane1.setBackground(new java.awt.Color(0, 102, 255));
        jLayeredPane1.setLayout(new java.awt.CardLayout());

        panel_menu_administrador.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("Menu");
        panel_menu_administrador.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 84, 42));

        btn_definirCartelera.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_definirCartelera.setText("Definir Cartelera");
        btn_definirCartelera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_definirCarteleraActionPerformed(evt);
            }
        });
        panel_menu_administrador.add(btn_definirCartelera, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 140, 90));

        btn_estadoSalas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_estadoSalas.setText("Estado Salas");
        btn_estadoSalas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_estadoSalasActionPerformed(evt);
            }
        });
        panel_menu_administrador.add(btn_estadoSalas, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, 140, 90));

        btn_reporteIngresos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_reporteIngresos.setText("Reporte Ingresos");
        btn_reporteIngresos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reporteIngresosActionPerformed(evt);
            }
        });
        panel_menu_administrador.add(btn_reporteIngresos, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 190, 140, 90));

        btn_reporteAsientos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_reporteAsientos.setText("Reporte Asientos");
        btn_reporteAsientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reporteAsientosActionPerformed(evt);
            }
        });
        panel_menu_administrador.add(btn_reporteAsientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 190, 150, 90));

        btn_atrasMenuAdministrador.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_atrasMenuAdministrador.setText("Atras");
        btn_atrasMenuAdministrador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atrasMenuAdministradorActionPerformed(evt);
            }
        });
        panel_menu_administrador.add(btn_atrasMenuAdministrador, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 110, 40));

        jLayeredPane1.add(panel_menu_administrador, "card3");

        panel_menuPrincipal.setMaximumSize(new java.awt.Dimension(900, 550));
        panel_menuPrincipal.setMinimumSize(new java.awt.Dimension(900, 550));
        panel_menuPrincipal.setPreferredSize(new java.awt.Dimension(900, 550));
        panel_menuPrincipal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_menuAdministrador.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_menuAdministrador.setText("Administrador");
        btn_menuAdministrador.setToolTipText("");
        btn_menuAdministrador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_menuAdministradorActionPerformed(evt);
            }
        });
        panel_menuPrincipal.add(btn_menuAdministrador, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 187, 146));

        btn_cliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_cliente.setText("Cliente");
        btn_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clienteActionPerformed(evt);
            }
        });
        panel_menuPrincipal.add(btn_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 160, 200, 146));

        jLabel58.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel58.setText("Menu Principal");
        panel_menuPrincipal.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jLayeredPane1.add(panel_menuPrincipal, "card2");

        panel_ingresoDatosPelicula.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Datos de la pelicula");
        panel_ingresoDatosPelicula.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("nombre");
        panel_ingresoDatosPelicula.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("numero de sala");
        panel_ingresoDatosPelicula.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("mes de inicio de la funcion");
        panel_ingresoDatosPelicula.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, -1, -1));
        panel_ingresoDatosPelicula.add(txt_nombrePelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 270, 30));

        btn_agregarPelicula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_agregarPelicula.setText("Agregar Pelicula");
        btn_agregarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarPeliculaActionPerformed(evt);
            }
        });
        panel_ingresoDatosPelicula.add(btn_agregarPelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 240, 140, 40));

        btn_limpiarCampos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_limpiarCampos.setText("Linpiar Campos");
        btn_limpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarCamposActionPerformed(evt);
            }
        });
        panel_ingresoDatosPelicula.add(btn_limpiarCampos, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 240, 130, 40));

        combo_mesInicioPelicula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combo_mesInicioPelicula.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Setiembre", "Octubre", "Noviembre", "Diciembre" }));
        panel_ingresoDatosPelicula.add(combo_mesInicioPelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 270, 30));

        combo_anioInicioPelicula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panel_ingresoDatosPelicula.add(combo_anioInicioPelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 190, 270, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("año de inicio de la funcion");
        panel_ingresoDatosPelicula.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 170, -1, -1));

        combo_numeroSala.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combo_numeroSala.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sala 1", "Sala 2", "Sala 3" }));
        panel_ingresoDatosPelicula.add(combo_numeroSala, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 270, 30));

        btn_atrasIngresoPelicula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_atrasIngresoPelicula.setText("Atras");
        btn_atrasIngresoPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atrasIngresoPeliculaActionPerformed(evt);
            }
        });
        panel_ingresoDatosPelicula.add(btn_atrasIngresoPelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 130, 40));

        tabla_peliculasRegistradas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Sala", "Mes Presentación", "Año Presentación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tabla_peliculasRegistradas);

        panel_ingresoDatosPelicula.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 570, 90));

        jLabel51.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel51.setText("Peliculas Registradas");
        panel_ingresoDatosPelicula.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        btn_eliminarPelicula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_eliminarPelicula.setText("Eliminar Pelicula");
        btn_eliminarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarPeliculaActionPerformed(evt);
            }
        });
        panel_ingresoDatosPelicula.add(btn_eliminarPelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 430, 140, 40));

        jLayeredPane1.add(panel_ingresoDatosPelicula, "card4");

        panel_estadoSala.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Sala a revizar");
        panel_estadoSala.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        combo_SalaARevisar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combo_SalaARevisar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sala 1", "Sala 2", "Sala 3" }));
        panel_estadoSala.add(combo_SalaARevisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 130, 30));

        btn_obtenerDatosSala.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_obtenerDatosSala.setText("Obtener Datos");
        btn_obtenerDatosSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_obtenerDatosSalaActionPerformed(evt);
            }
        });
        panel_estadoSala.add(btn_obtenerDatosSala, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 130, 30));

        tabla_asientosSala.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Letra Asiento", "Numero Asiento", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_asientosSala.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabla_asientosSala.getTableHeader().setResizingAllowed(false);
        tabla_asientosSala.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabla_asientosSala);

        panel_estadoSala.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 640, 170));

        jPanel4.setBackground(new java.awt.Color(255, 102, 102));
        panel_estadoSala.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 50, 10));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Asientos Ocupados");
        panel_estadoSala.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, -1, -1));

        btn_atrasEstadoPelicula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_atrasEstadoPelicula.setText("Atras");
        btn_atrasEstadoPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atrasEstadoPeliculaActionPerformed(evt);
            }
        });
        panel_estadoSala.add(btn_atrasEstadoPelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 110, 40));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Asientos Ocupados: ");
        panel_estadoSala.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, -1, -1));

        label_asientosOcupados.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_asientosOcupados.setText("0");
        panel_estadoSala.add(label_asientosOcupados, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 390, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Asientos Disponibles: ");
        panel_estadoSala.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, -1, -1));

        label_asientosDisponibles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_asientosDisponibles.setText("0");
        panel_estadoSala.add(label_asientosDisponibles, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 420, -1, -1));

        jLayeredPane1.add(panel_estadoSala, "card5");

        panel_ingresosPorSala.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Ingresos por sala");
        panel_ingresosPorSala.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Ingresos sala 1:");
        panel_ingresosPorSala.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Ingresos sala 2:");
        panel_ingresosPorSala.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Ingresos sala 3");
        panel_ingresosPorSala.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, -1, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("colones");
        panel_ingresosPorSala.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 190, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("colones");
        panel_ingresosPorSala.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 270, -1, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("colones");
        panel_ingresosPorSala.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 350, -1, -1));

        btn_atrasIngresoSalas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_atrasIngresoSalas.setText("Atras");
        btn_atrasIngresoSalas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atrasIngresoSalasActionPerformed(evt);
            }
        });
        panel_ingresosPorSala.add(btn_atrasIngresoSalas, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 120, 40));

        txt_ingresosSala1.setEditable(false);
        txt_ingresosSala1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panel_ingresosPorSala.add(txt_ingresosSala1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 260, 30));

        txt_ingresosSala2.setEditable(false);
        txt_ingresosSala2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panel_ingresosPorSala.add(txt_ingresosSala2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 260, 30));

        txt_ingresosSala3.setEditable(false);
        txt_ingresosSala3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panel_ingresosPorSala.add(txt_ingresosSala3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, 260, 30));

        jLayeredPane1.add(panel_ingresosPorSala, "card6");

        panel_asientosReservados.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("Reporte asientos reservados");
        panel_asientosReservados.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Sala 1:");
        panel_asientosReservados.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, -1, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Sala 2:");
        panel_asientosReservados.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, -1, -1));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Sala 3:");
        panel_asientosReservados.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, -1, -1));

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("asientos");
        panel_asientosReservados.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 190, -1, -1));

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("asientos");
        panel_asientosReservados.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 280, -1, -1));

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText("asientos");
        panel_asientosReservados.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 370, -1, -1));

        btn_atrasAsientosReservados.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_atrasAsientosReservados.setText("Atras");
        btn_atrasAsientosReservados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atrasAsientosReservadosActionPerformed(evt);
            }
        });
        panel_asientosReservados.add(btn_atrasAsientosReservados, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 110, 40));

        txt_asientosReservadosSala1.setEditable(false);
        txt_asientosReservadosSala1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panel_asientosReservados.add(txt_asientosReservadosSala1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, 240, 30));

        txt_asientosReservadosSala2.setEditable(false);
        txt_asientosReservadosSala2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panel_asientosReservados.add(txt_asientosReservadosSala2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 240, 30));

        txt_asientosReservadosSala3.setEditable(false);
        txt_asientosReservadosSala3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panel_asientosReservados.add(txt_asientosReservadosSala3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 360, 240, 30));

        jLayeredPane1.add(panel_asientosReservados, "card7");

        panel_seleccionarPelicula.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("Pelicula a reservar");
        panel_seleccionarPelicula.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setText("Boletos de la pelicula");
        panel_seleccionarPelicula.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, -1, -1));

        txt_totalBoletosAdultos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_totalBoletosAdultos.setText("0");
        txt_totalBoletosAdultos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_totalBoletosAdultosKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_totalBoletosAdultosKeyTyped(evt);
            }
        });
        panel_seleccionarPelicula.add(txt_totalBoletosAdultos, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, 70, 30));

        txt_totalBoletosAdultosMayores.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_totalBoletosAdultosMayores.setText("0");
        txt_totalBoletosAdultosMayores.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_totalBoletosAdultosMayoresKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_totalBoletosAdultosMayoresKeyTyped(evt);
            }
        });
        panel_seleccionarPelicula.add(txt_totalBoletosAdultosMayores, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 300, 70, 30));

        txt_totalBoletosNinios.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_totalBoletosNinios.setText("0");
        txt_totalBoletosNinios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_totalBoletosNiniosKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_totalBoletosNiniosKeyTyped(evt);
            }
        });
        panel_seleccionarPelicula.add(txt_totalBoletosNinios, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 300, 70, 30));

        btn_continuarReservaPelicula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_continuarReservaPelicula.setText("Continuar");
        btn_continuarReservaPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_continuarReservaPeliculaActionPerformed(evt);
            }
        });
        panel_seleccionarPelicula.add(btn_continuarReservaPelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 410, 120, 40));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Adultos");
        panel_seleccionarPelicula.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, -1, -1));

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("Adultos Mayores");
        panel_seleccionarPelicula.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 310, -1, -1));

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText("Niños");
        panel_seleccionarPelicula.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 310, -1, -1));

        btn_atrasReservaPelicula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_atrasReservaPelicula.setText("Atras");
        btn_atrasReservaPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atrasReservaPeliculaActionPerformed(evt);
            }
        });
        panel_seleccionarPelicula.add(btn_atrasReservaPelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 110, 40));

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel31.setText("Total a pagar");
        panel_seleccionarPelicula.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, -1, -1));

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setText("colones");
        panel_seleccionarPelicula.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 390, -1, -1));

        tabla_seleccionPelicula.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Sala", "Mes Presentacion", "Año Presentacion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tabla_seleccionPelicula);

        panel_seleccionarPelicula.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 570, 100));

        txt_montoTotalBoletos.setEditable(false);
        txt_montoTotalBoletos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_montoTotalBoletos.setText("0.0");
        panel_seleccionarPelicula.add(txt_montoTotalBoletos, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, 130, 30));

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel30.setText("Seleccion de pelicula");
        panel_seleccionarPelicula.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLayeredPane1.add(panel_seleccionarPelicula, "card8");

        panel_seleccionAsientos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setText("Seleccion de asientos");
        panel_seleccionAsientos.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, -1));

        tabla_seleccionAsientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Letra Asiento", "Numero Asiento", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_seleccionAsientos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabla_seleccionAsientos.setShowGrid(false);
        jScrollPane2.setViewportView(tabla_seleccionAsientos);

        panel_seleccionAsientos.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 320, 120));

        btn_continuarSeleccionAsientos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_continuarSeleccionAsientos.setText("Continuar");
        btn_continuarSeleccionAsientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_continuarSeleccionAsientosActionPerformed(evt);
            }
        });
        panel_seleccionAsientos.add(btn_continuarSeleccionAsientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 390, 100, 40));

        btn_seleccionarAsiento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_seleccionarAsiento.setText("Seleccionar");
        btn_seleccionarAsiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_seleccionarAsientoActionPerformed(evt);
            }
        });
        panel_seleccionAsientos.add(btn_seleccionarAsiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, 100, 30));

        tabla_asientosSeleccionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Letra Asiento", "Numero Asiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tabla_asientosSeleccionados);

        panel_seleccionAsientos.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, 290, 120));

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel34.setText("Asientos Seleccionados");
        panel_seleccionAsientos.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, -1, -1));

        btn_eliminarAsientoSeleccionado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_eliminarAsientoSeleccionado.setText("Eliminar");
        btn_eliminarAsientoSeleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarAsientoSeleccionadoActionPerformed(evt);
            }
        });
        panel_seleccionAsientos.add(btn_eliminarAsientoSeleccionado, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 310, 100, 30));

        btn_atrasSeleccionAsientos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_atrasSeleccionAsientos.setText("Atras");
        btn_atrasSeleccionAsientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atrasSeleccionAsientosActionPerformed(evt);
            }
        });
        panel_seleccionAsientos.add(btn_atrasSeleccionAsientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 130, 40));

        jLabel59.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel59.setText("Seleccion de asientos");
        panel_seleccionAsientos.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jLayeredPane1.add(panel_seleccionAsientos, "card9");

        panel_pagoBoletos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel35.setText("Pago Boletos");
        panel_pagoBoletos.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel36.setText("Datos Cliente");
        panel_pagoBoletos.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, -1));

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel37.setText("Nombre Cliente");
        panel_pagoBoletos.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, -1, -1));

        txt_nombreCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panel_pagoBoletos.add(txt_nombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 270, 30));

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel38.setText("Datos Tarjeta");
        panel_pagoBoletos.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, -1, -1));

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel39.setText("Numero Tarjeta");
        panel_pagoBoletos.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 240, -1, -1));

        txt_numeroTarjeta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_numeroTarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_numeroTarjetaKeyTyped(evt);
            }
        });
        panel_pagoBoletos.add(txt_numeroTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 260, 270, 30));

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel40.setText("Codigo Seguridad");
        panel_pagoBoletos.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 300, 130, -1));

        txt_codigoSeguridad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_codigoSeguridad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codigoSeguridadKeyTyped(evt);
            }
        });
        panel_pagoBoletos.add(txt_codigoSeguridad, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 320, 270, 30));

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel41.setText("Mes Vencimiento");
        panel_pagoBoletos.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 300, -1, -1));

        combo_mesVencimientoTarjeta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combo_mesVencimientoTarjeta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        panel_pagoBoletos.add(combo_mesVencimientoTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 320, 270, 30));

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel42.setText("Año vencimiento");
        panel_pagoBoletos.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, -1, -1));

        combo_anioVencimientoTarjeta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panel_pagoBoletos.add(combo_anioVencimientoTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 380, 270, 30));

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel43.setText("Total a pagar");
        panel_pagoBoletos.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 360, -1, -1));

        txt_totalAPagar.setEditable(false);
        txt_totalAPagar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        panel_pagoBoletos.add(txt_totalAPagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 380, 270, 30));

        btn_continuarPago.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_continuarPago.setText("Continuar");
        btn_continuarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_continuarPagoActionPerformed(evt);
            }
        });
        panel_pagoBoletos.add(btn_continuarPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 430, 120, 40));

        btn_atrasPagoBoletos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_atrasPagoBoletos.setText("Atras");
        btn_atrasPagoBoletos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atrasPagoBoletosActionPerformed(evt);
            }
        });
        panel_pagoBoletos.add(btn_atrasPagoBoletos, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 130, 40));

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel44.setText("Tipo Tarjeta");
        panel_pagoBoletos.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, -1, -1));

        group_tipoTarjeta.add(radio_visa);
        radio_visa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radio_visa.setSelected(true);
        radio_visa.setText("Visa");
        panel_pagoBoletos.add(radio_visa, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, -1, -1));

        group_tipoTarjeta.add(radio_mastercard);
        radio_mastercard.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radio_mastercard.setText("Mastercard");
        panel_pagoBoletos.add(radio_mastercard, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, -1, -1));

        jLayeredPane1.add(panel_pagoBoletos, "card10");

        panel_factura.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel45.setText("Cine \"XXXXXXXXXX\"");
        panel_factura.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, -1));

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel46.setText("Numero de reservacion:");
        panel_factura.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel47.setText("Fecha:");
        panel_factura.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));

        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel48.setText("Nombre del cliente:");
        panel_factura.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));

        jLabel49.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel49.setText("Tarjeta:");
        panel_factura.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, -1, -1));

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel50.setText("Sala No.");
        panel_factura.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel52.setText("Pelicula:");
        panel_factura.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, -1, -1));

        jLabel53.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel53.setText("Tiquetes comprados:");
        panel_factura.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, -1, -1));

        jLabel54.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel54.setText("Asientos seleccionados:");
        panel_factura.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, -1, -1));

        jLabel55.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel55.setText("Total pagado:");
        panel_factura.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, -1, -1));

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel56.setText("Que disfrute su pelicula!");
        panel_factura.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 380, -1, -1));

        btn_finalizarCompra.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_finalizarCompra.setText("Finalizar Compra");
        btn_finalizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_finalizarCompraActionPerformed(evt);
            }
        });
        panel_factura.add(btn_finalizarCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 425, -1, 40));

        label_facturaNumeroReservacion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_facturaNumeroReservacion.setText("dato");
        panel_factura.add(label_facturaNumeroReservacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, -1, -1));

        label_facturaFecha.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_facturaFecha.setText("dato");
        panel_factura.add(label_facturaFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, -1, -1));

        label_facturaNombreCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_facturaNombreCliente.setText("dato");
        panel_factura.add(label_facturaNombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, -1, -1));

        label_facturaTarjeta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_facturaTarjeta.setText("dato");
        panel_factura.add(label_facturaTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, -1, -1));

        label_facturaNumeroSala.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_facturaNumeroSala.setText("dato");
        panel_factura.add(label_facturaNumeroSala, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, -1, -1));

        label_facturaNombrePelicula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_facturaNombrePelicula.setText("dato");
        panel_factura.add(label_facturaNombrePelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, -1, -1));

        label_facturaTiquetesComprados.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_facturaTiquetesComprados.setText("dato");
        panel_factura.add(label_facturaTiquetesComprados, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, -1, -1));

        label_facturaAsientosSeleccionados.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_facturaAsientosSeleccionados.setText("dato");
        panel_factura.add(label_facturaAsientosSeleccionados, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 290, -1, -1));

        label_facturaTotalPagado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_facturaTotalPagado.setText("dato");
        panel_factura.add(label_facturaTotalPagado, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, -1, -1));

        jLabel57.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel57.setText("₡");
        panel_factura.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 320, 10, -1));

        jLayeredPane1.add(panel_factura, "card11");

        getContentPane().add(jLayeredPane1);
        jLayeredPane1.setBounds(0, 0, 740, 480);

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void cambiarDePanel(JPanel jpanel) {
    jLayeredPane1.removeAll();
    jLayeredPane1.add(jpanel);
    jLayeredPane1.repaint();
    jLayeredPane1.revalidate();
  }

  private String obtenerContraseniaDelAdministrador() {
    String contrasenia;

    do {
      contrasenia = JOptionPane.showInputDialog("Digite la contraseña:");

      if (contrasenia == null) return INICIO_SESION_CANCELADO;

      if (contrasenia.isEmpty()) {
        JOptionPane.showMessageDialog(
          null,
          "Por favor, digite la contraseña para ingresar como administrador."
        );
      }
    } while (contrasenia.isEmpty());

    return contrasenia;
  }

  private boolean iniciarSesionComoAdministrador() {
    int cantidadContraseniasErroneas = 0;
    Cliente cliente = new Cliente();
    boolean esUnaContraseniaValida = false;

    do {
      String contrasenia = obtenerContraseniaDelAdministrador();

      if (contrasenia == INICIO_SESION_CANCELADO) return esUnaContraseniaValida;

      try {
        cliente.iniciarSession(contrasenia);
        esUnaContraseniaValida = true;
      } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, ex.getMessage());
      }

      if (!esUnaContraseniaValida) {
        cantidadContraseniasErroneas++;
      }
    } while (!esUnaContraseniaValida && cantidadContraseniasErroneas < 3);

    return esUnaContraseniaValida;
  }

  private void btn_menuAdministradorActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_administrador_btnActionPerformed
    boolean contraseniavalida = iniciarSesionComoAdministrador();

    if (!contraseniavalida) return;

    cambiarDePanel(panel_menu_administrador);
  }//GEN-LAST:event_administrador_btnActionPerformed


  private void cargarPeliculasEnTablaSeleccionPelicula() {
    Pelicula[] peliculasRegistradas = cine.getPeliculas();

    Tabla_utilidades.limpiarDatosTabla(tabla_seleccionPelicula);
    Tabla_utilidades.agregarDatosALaTabla(
      tabla_seleccionPelicula,
      peliculasRegistradas
    );
  }

  private void btn_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clienteActionPerformed
    
    cargarPeliculasEnTablaSeleccionPelicula();
    cambiarDePanel(panel_seleccionarPelicula);
  }//GEN-LAST:event_btn_clienteActionPerformed

  private void agregarAniosAlCombo() {
    int[] listaAnios = Fecha_utilidades.obtenerListaAnios();

    for (int anio : listaAnios) {
      combo_anioInicioPelicula.addItem(String.valueOf(anio));
    }
  }

  private void btn_definirCarteleraActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_definirCarteleraActionPerformed
    agregarAniosAlCombo();
    cambiarDePanel(panel_ingresoDatosPelicula);
  }//GEN-LAST:event_btn_definirCarteleraActionPerformed

  private void validarInsercionDatos() throws Exception {
    String nombrePelicula = txt_nombrePelicula.getText();

    if (nombrePelicula.isEmpty()) {
      throw new Exception("Es necesario que digite el nombre de la pelicula.");
    }
  }

  private Pelicula obtenerDatosPelicula() {
    Pelicula pelicula = new Pelicula();
    int anioPelicula = Integer.parseInt(
      combo_anioInicioPelicula.getSelectedItem().toString()
    );
    int mesInicioPelicula = combo_mesInicioPelicula.getSelectedIndex() + 1;
    LocalDate fechaPelicula = LocalDate.of(anioPelicula, mesInicioPelicula, 1);
    String nombrePelicula = txt_nombrePelicula.getText();

    pelicula.setNombre(nombrePelicula);
    pelicula.setNumeroSala(combo_numeroSala.getSelectedIndex());
    pelicula.setFechaYHoraFuncion(fechaPelicula);

    return pelicula;
  }

  private void guardarPelicula(Pelicula nuevaPelicula) throws Exception {
    cine.verificarExistenciaPelicula(nuevaPelicula);
    cine.setPelicula(nuevaPelicula);
  }

  private void mostrarMensajeConfirmacion() {
    JOptionPane.showMessageDialog(null, "Pelicula registrada correctamente");
  }

  private void limpiarCamposFormularioPelicula() {
    txt_nombrePelicula.setText("");
    combo_anioInicioPelicula.setSelectedIndex(0);
    combo_mesInicioPelicula.setSelectedIndex(0);
    combo_numeroSala.setSelectedIndex(0);
  }

  private void actualizarTablaPeliculasRegistradas() {
    Pelicula[] peliculasRegistradas = cine.getPeliculas();

    Tabla_utilidades.limpiarDatosTabla(tabla_peliculasRegistradas);
    Tabla_utilidades.agregarDatosALaTabla(
      tabla_peliculasRegistradas,
      peliculasRegistradas
    );
  }

  private void btn_agregarPeliculaActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_agregarPeliculaActionPerformed
    Pelicula nuevaPelicula = new Pelicula();

    try {
      validarInsercionDatos();
      nuevaPelicula = obtenerDatosPelicula();
      guardarPelicula(nuevaPelicula);
      mostrarMensajeConfirmacion();
      limpiarCamposFormularioPelicula();
      actualizarTablaPeliculasRegistradas();
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(null, ex.getMessage());
    }
  }//GEN-LAST:event_btn_agregarPeliculaActionPerformed

  private void btn_limpiarCamposActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_limpiarCamposActionPerformed
    limpiarCamposFormularioPelicula();
  }//GEN-LAST:event_btn_limpiarCamposActionPerformed

  private void btn_estadoSalasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_estadoSalasActionPerformed
    Tabla_utilidades.centrarElementosTabla(tabla_asientosSala);
    cambiarDePanel(panel_estadoSala);
  }//GEN-LAST:event_btn_estadoSalasActionPerformed

  private Cliente[][] obtenerDatosSalaSeleccionada(int salaSeleccionada) {
    Cliente[][] datosSala = cine.getSala(salaSeleccionada);
    return datosSala;
  }

  private int obtenerTotalAsientosOcupados(Cliente[][] salaSeleccionada) {
    int totalAsientosOcupados = cine.obtenerAsientosReservadosPorSala(
      salaSeleccionada
    );
    return totalAsientosOcupados;
  }

  private int obtenerTotalAsientosDisponibles(
    Cliente[][] salaSeleccionada,
    int totalAsientosOcupados
  ) {
    int totalAsientosDisponibles = cine.obtenerAsientosDisponibles(
      salaSeleccionada
    );
    return totalAsientosDisponibles;
  }

  private void cargarDatosEnVentanaEstadoSala(
    Cliente[][] datosSalaSeleccionada,
    int totalAsientosDisponibles,
    int totalAsientosOcupados
  ) {
    Tabla_utilidades.limpiarDatosTabla(tabla_asientosSala);
    Tabla_utilidades.agregarDatosALaTabla(
      tabla_asientosSala,
      datosSalaSeleccionada
    );

    label_asientosDisponibles.setText(String.valueOf(totalAsientosDisponibles));
    label_asientosOcupados.setText(String.valueOf(totalAsientosOcupados));
  }

  private void btn_obtenerDatosSalaActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_obtenerDatosSalaActionPerformed
    int salaSeleccionada = combo_SalaARevisar.getSelectedIndex();

    Cliente[][] datosSalaSeleccionada = obtenerDatosSalaSeleccionada(
      salaSeleccionada
    );
    int totalAsientosOcupados = obtenerTotalAsientosOcupados(
      datosSalaSeleccionada
    );
    int totalAsientosDisponibles = obtenerTotalAsientosDisponibles(
      datosSalaSeleccionada,
      totalAsientosOcupados
    );

    cargarDatosEnVentanaEstadoSala(
      datosSalaSeleccionada,
      totalAsientosDisponibles,
      totalAsientosOcupados
    );
  }//GEN-LAST:event_btn_obtenerDatosSalaActionPerformed

  private void mostrarIngresosSalasEnPantalla(double[] listaIngresosPorSala) {
    txt_ingresosSala1.setText(String.valueOf(listaIngresosPorSala[0]));
    txt_ingresosSala2.setText(String.valueOf(listaIngresosPorSala[1]));
    txt_ingresosSala3.setText(String.valueOf(listaIngresosPorSala[2]));
  }

  private void calcularIngresosSalas() {
    double[] listaIngresosPorSala;
    listaIngresosPorSala = cine.obtenerReporteIngresoPorSala();

    mostrarIngresosSalasEnPantalla(listaIngresosPorSala);
  }

  private void btn_reporteIngresosActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_reporteIngresosActionPerformed
    calcularIngresosSalas();
    cambiarDePanel(panel_ingresosPorSala);
  }//GEN-LAST:event_btn_reporteIngresosActionPerformed

  private void mostrarAsientosReservadosEnPantalla(
    int[] listaAsientosReservadosPorSala
  ) {
    txt_asientosReservadosSala1.setText(
      String.valueOf(listaAsientosReservadosPorSala[0])
    );
    txt_asientosReservadosSala2.setText(
      String.valueOf(listaAsientosReservadosPorSala[1])
    );
    txt_asientosReservadosSala3.setText(
      String.valueOf(listaAsientosReservadosPorSala[2])
    );
  }

  private void calcularAsientosReservadosPorSala() {
    int[] listaAsientosReservadosPorSala;

    listaAsientosReservadosPorSala = cine.obtenerReporteAsientosReservados();

    mostrarAsientosReservadosEnPantalla(listaAsientosReservadosPorSala);
  }

  private void btn_reporteAsientosActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_reporteAsientosActionPerformed
    calcularAsientosReservadosPorSala();
    cambiarDePanel(panel_asientosReservados);
  }//GEN-LAST:event_btn_reporteAsientosActionPerformed

  private void btn_atrasMenuAdministradorActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_atrasMenuAdministradorActionPerformed
    cambiarDePanel(panel_menuPrincipal);
  }//GEN-LAST:event_btn_atrasMenuAdministradorActionPerformed

  private void btn_atrasIngresoPeliculaActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_atrasIngresoPeliculaActionPerformed
    limpiarCamposFormularioPelicula();
    cambiarDePanel(panel_menu_administrador);
  }//GEN-LAST:event_btn_atrasIngresoPeliculaActionPerformed

  private void btn_atrasEstadoPeliculaActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_atrasEstadoPeliculaActionPerformed
    limpiarEstadoPelicula();
    cambiarDePanel(panel_menu_administrador);
  }//GEN-LAST:event_btn_atrasEstadoPeliculaActionPerformed

  private void btn_atrasIngresoSalasActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_atrasIngresoSalasActionPerformed
    limpiarIngresosPorSala();
    cambiarDePanel(panel_menu_administrador);
  }//GEN-LAST:event_btn_atrasIngresoSalasActionPerformed

  private void btn_atrasAsientosReservadosActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_atrasAsientosReservadosActionPerformed
    limpiarAsietosReservados();
    cambiarDePanel(panel_menu_administrador);
  }//GEN-LAST:event_btn_atrasAsientosReservadosActionPerformed

  private void btn_atrasReservaPeliculaActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_atrasReservaPeliculaActionPerformed
    limpiarSeleccionPelicula();
    cambiarDePanel(panel_menuPrincipal);
  }//GEN-LAST:event_btn_atrasReservaPeliculaActionPerformed

  private void validarSeleccionPelicula() throws Exception {
    if (tabla_seleccionPelicula.getRowCount() == 0) {
      throw new Exception(
        "Error, no existen películas ingresadas en el sistema. Por favor contacte con el administrador."
      );
    }

    if (tabla_seleccionPelicula.getSelectedRow() == -1) {
      throw new Exception(
        "Es necesario que seleccione una pelicula para continuar."
      );
    }
  }

  private void validarBoletos() throws Exception {
      
    int totalBoletosAdultos = JtextField_utilidades.obtenerValorNumericoIngresado(
      txt_totalBoletosAdultos
    );
    int totalBoletosAdultosMayores = JtextField_utilidades.obtenerValorNumericoIngresado(
      txt_totalBoletosAdultosMayores
    );
    int totalBoletosNinios = JtextField_utilidades.obtenerValorNumericoIngresado(
      txt_totalBoletosNinios
    );
    int totalBoletos =
      totalBoletosAdultos + totalBoletosAdultosMayores + totalBoletosNinios;

    if (
      totalBoletosAdultos == 0 &&
      totalBoletosAdultosMayores == 0 &&
      totalBoletosNinios == 0
    ) {
      throw new Exception(
        "Es necesario que indique la cantidad de boletos necesarios para la pelicula seleccionada"
      );
    }

    if (totalBoletos > 4) {
      throw new Exception(
        "No se puede comprar mas de 4 boletos para la pelicula"
      );
    }
  }

  private Pelicula obtenerPeliculaSeleccionada() {
    int filaSeleccionada = tabla_seleccionPelicula.getSelectedRow();
    DefaultTableModel modeloTablaSeleccionPelicula = (DefaultTableModel) tabla_seleccionPelicula.getModel();
    String nombrePeliculaSeleccionada = Tabla_utilidades
      .obtenerDatoTabla(
        filaSeleccionada,
        Identificador.COLUMNA1,
        modeloTablaSeleccionPelicula
      )
      .toString();

    Pelicula peliculaSeleccionada = cine.getPelicula(
      nombrePeliculaSeleccionada
    );
    return peliculaSeleccionada;
  }

  private void validarAsientosDisponiblesPelicula() throws Exception {
    int totalAsientos = 0;

    int totalBoletosAdultos = JtextField_utilidades.obtenerValorNumericoIngresado(
      txt_totalBoletosAdultos
    );
    int totalBoletosAdultosMayores = JtextField_utilidades.obtenerValorNumericoIngresado(
      txt_totalBoletosAdultosMayores
    );

    int totalBoletosNinios = JtextField_utilidades.obtenerValorNumericoIngresado(
      txt_totalBoletosNinios
    );

    totalAsientos =
      totalBoletosAdultos + totalBoletosAdultosMayores + totalBoletosNinios;

    Pelicula peliculaReservada = obtenerPeliculaSeleccionada();

    cine.hayAsientosDisponibles(
      peliculaReservada.getNumeroSala(),
      totalAsientos
    );
  }

  private void guardarPeliculaSeleccionada(Pelicula pelicula) {
    factura.setPelicula(pelicula);
  }

  private Boleto[] obtenerDatosBoletos() throws Exception {
    String[] tipoPersona = new String[] {
      "adulto regular",
      "adulto mayor",
      "niño",
    };
    int[] cantidadesBoletos = new int[] {
      JtextField_utilidades.obtenerValorNumericoIngresado(
        txt_totalBoletosAdultos
      ),
      JtextField_utilidades.obtenerValorNumericoIngresado(
        txt_totalBoletosAdultosMayores
      ),
      JtextField_utilidades.obtenerValorNumericoIngresado(
        txt_totalBoletosNinios
      ),
    };
    Boleto[] boletos = new Boleto[tipoPersona.length];

    for (int i = 0; i < tipoPersona.length; i++) {
      Boleto boleto = new Boleto();
      boleto.setTipoPersona(tipoPersona[i]);
      boleto.setCantidadBoletos(cantidadesBoletos[i]);
      boletos[i] = boleto;
    }

    return boletos;
  }

  private void guardarBoletos(Boleto[] boletos) {
    factura.setBoletosPelicula(boletos);
  }

  private void guardarMontoBoletos() {
    Cliente cliente = new Cliente();
    cliente.setTotalPagado(
      Double.parseDouble(txt_montoTotalBoletos.getText())
    );
    factura.setCliente(cliente);
  }

  private void mostrarAsientoSalaPeliculaEnVentanaSeleccionAsientos(
    Cliente[][] salaPelicula
  ) {
    Tabla_utilidades.agregarDatosALaTabla(
      tabla_seleccionAsientos,
      salaPelicula
    );
  }

  private void btn_continuarReservaPeliculaActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_continuarReservaPeliculaActionPerformed
    Pelicula peliculaSeleccionada;
    Cliente[][] salaPelicula;
    Boleto[] boletos;

    try {
      validarSeleccionPelicula();
      validarBoletos();
      validarAsientosDisponiblesPelicula();

      peliculaSeleccionada = obtenerPeliculaSeleccionada();
      guardarPeliculaSeleccionada(peliculaSeleccionada);

      boletos = obtenerDatosBoletos();

      guardarBoletos(boletos);
      guardarMontoBoletos();

      salaPelicula = cine.getSala(peliculaSeleccionada.getNumeroSala());
      mostrarAsientoSalaPeliculaEnVentanaSeleccionAsientos(salaPelicula);
      cambiarDePanel(panel_seleccionAsientos);
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(null, ex.getMessage());
    }
  }//GEN-LAST:event_btn_continuarReservaPeliculaActionPerformed

  private void actualizarPrecioTotalBoletos() throws Exception {
    int totalBoletosAdultos = JtextField_utilidades.obtenerValorNumericoIngresado(
      txt_totalBoletosAdultos
    );
    int totalBoletosAdultosMayores = JtextField_utilidades.obtenerValorNumericoIngresado(
      txt_totalBoletosAdultosMayores
    );
    int totalBoletosNinios = JtextField_utilidades.obtenerValorNumericoIngresado(
      txt_totalBoletosNinios
    );

    double precioBoletoAdulto = cine.getPrecioBoletoAdulto();
    double precioBoletoAdultoMayor = cine.getPrecioBoletoAdultoMayor();
    double precioBoletoNinio = cine.getPrecioBoletoNinio();

    double precioTotalBoletosAdulto = totalBoletosAdultos * precioBoletoAdulto;
    double precioTotalBoletosAdultoMayor =
      totalBoletosAdultosMayores * precioBoletoAdultoMayor;
    double precioTotalBoletosNinios = totalBoletosNinios * precioBoletoNinio;

    txt_montoTotalBoletos.setText(
      String.valueOf(
        precioTotalBoletosAdulto +
        precioTotalBoletosAdultoMayor +
        precioTotalBoletosNinios
      )
    );
  }

  private void btn_atrasSeleccionAsientosActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_atrasSeleccionAsientosActionPerformed
    limpiarSeleccionAsientos();
    cambiarDePanel(panel_seleccionarPelicula);
  }//GEN-LAST:event_btn_atrasSeleccionAsientosActionPerformed

  private void validarSeleccionFilaTabla() throws Exception {
    if (tabla_seleccionAsientos.getSelectedRow() == -1) {
      throw new Exception(
        "Es necesario que seleccione un asiento para apartarlo."
      );
    }
  }

  private void validarEstadoAsiento() throws Exception {
    DefaultTableModel modeloTablaSeleccionAsientos = (DefaultTableModel) tabla_seleccionAsientos.getModel();
    int numeroFilaSeleccionada;
    String estadoAsiento;
    numeroFilaSeleccionada = tabla_seleccionAsientos.getSelectedRow();

    estadoAsiento =
      modeloTablaSeleccionAsientos
        .getValueAt(numeroFilaSeleccionada, 2)
        .toString();

    if (estadoAsiento.equals("ocupado")) {
      throw new Exception(
        "No se puede seleccionar asientos que estén ocupados."
      );
    }
  }

  private void validarAsientosReservadosAnteriormente() throws Exception {
    DefaultTableModel modeloTablaAsientosSeleccionados = (DefaultTableModel) tabla_asientosSeleccionados.getModel();
    DefaultTableModel modeloTablaSeleccionAsientos = (DefaultTableModel) tabla_seleccionAsientos.getModel();
    int totalAsientosApartados = modeloTablaAsientosSeleccionados.getRowCount();
    int numeroFilaSeleccionada = tabla_seleccionAsientos.getSelectedRow();
    String letraAsientoAReservar;
    String numeroAsientoAReservar;
    String letraAsientoResevado;
    String numeroAsientoReservado;

    for (int filaTabla = 0; filaTabla < totalAsientosApartados; filaTabla++) {
      letraAsientoAReservar =
        Tabla_utilidades
          .obtenerDatoTabla(
            numeroFilaSeleccionada,
            Identificador.COLUMNA1,
            modeloTablaSeleccionAsientos
          )
          .toString();

      numeroAsientoAReservar =
        Tabla_utilidades
          .obtenerDatoTabla(
            numeroFilaSeleccionada,
            Identificador.COLUMNA2,
            modeloTablaSeleccionAsientos
          )
          .toString();

      letraAsientoResevado =
        Tabla_utilidades
          .obtenerDatoTabla(
            filaTabla,
            Identificador.COLUMNA1,
            modeloTablaAsientosSeleccionados
          )
          .toString();

      numeroAsientoReservado =
        Tabla_utilidades
          .obtenerDatoTabla(
            filaTabla,
            Identificador.COLUMNA2,
            modeloTablaAsientosSeleccionados
          )
          .toString();

      if (
        letraAsientoAReservar.equals(letraAsientoResevado) &&
        numeroAsientoAReservar.equals(numeroAsientoReservado)
      ) {
        throw new Exception(
          "El asiento seleccionado ya se encuentra reservado"
        );
      }
    }
  }

  private void validarAsientoSeleccionado() throws Exception {
    validarSeleccionFilaTabla();
    validarEstadoAsiento();
    validarAsientosReservadosAnteriormente();
  }

  private void agregarAsientoSeleccionadoATablaAsientosSeleccionados() {
    DefaultTableModel modeloTablaAsientosSeleccionados = (DefaultTableModel) tabla_asientosSeleccionados.getModel();
    DefaultTableModel modeloTablaSeleccionAsientos = (DefaultTableModel) tabla_seleccionAsientos.getModel();
    int numeroFilaSeleccionada = tabla_seleccionAsientos.getSelectedRow();

    String letraAsiento = Tabla_utilidades
      .obtenerDatoTabla(
        numeroFilaSeleccionada,
        Identificador.COLUMNA1,
        modeloTablaSeleccionAsientos
      )
      .toString();

    String numeroAsiento = Tabla_utilidades
      .obtenerDatoTabla(
        numeroFilaSeleccionada,
        Identificador.COLUMNA2,
        modeloTablaSeleccionAsientos
      )
      .toString();

    modeloTablaAsientosSeleccionados.addRow(
      new Object[] { letraAsiento, numeroAsiento }
    );
  }

  private void btn_seleccionarAsientoActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_seleccionarAsientoActionPerformed
    try {
      validarAsientoSeleccionado();
      agregarAsientoSeleccionadoATablaAsientosSeleccionados();
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(null, ex.getMessage());
    }
  }//GEN-LAST:event_btn_seleccionarAsientoActionPerformed

  private void validarSeleccionAsientoAEliminar() throws Exception {
    if (tabla_asientosSeleccionados.getSelectedRow() == -1) {
      throw new Exception(
        "Es necesario que seleccione un asiento para eliminarlo."
      );
    }
  }

  private void eliminarAsientoSeleccionado() {
    DefaultTableModel modeloTablaAsientosSeleccionados = (DefaultTableModel) tabla_asientosSeleccionados.getModel();
    int numeroFilaTablaSeleccionada = tabla_asientosSeleccionados.getSelectedRow();

    modeloTablaAsientosSeleccionados.removeRow(numeroFilaTablaSeleccionada);
  }

  private void btn_eliminarAsientoSeleccionadoActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_eliminarAsientoSeleccionadoActionPerformed
    try {
      validarSeleccionAsientoAEliminar();
      eliminarAsientoSeleccionado();
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(null, ex.getMessage());
    }
  }//GEN-LAST:event_btn_eliminarAsientoSeleccionadoActionPerformed

  private int obtenerTotalBoletosSeleccionados() {
    int totalBoletosSeleccionados = 0;
    Boleto[] boletosSeleccionados = factura.getBoletosPelicula();

    for (Boleto boleto : boletosSeleccionados) {
      totalBoletosSeleccionados += boleto.getCantidadBoletos();
    }
    return totalBoletosSeleccionados;
  }

  private void validarAsientosReservados() throws Exception {
    DefaultTableModel modeloTablaAsientosSeleccionados = (DefaultTableModel) tabla_asientosSeleccionados.getModel();
    int totalBoletosSeleccionados = obtenerTotalBoletosSeleccionados();
    int totalAsientosSeleccionados = modeloTablaAsientosSeleccionados.getRowCount();

    if (totalAsientosSeleccionados == 0) {
      throw new Exception(
        "Es necesario reservar los asientos para la pelicula seleccionada."
      );
    }

    if (
      totalAsientosSeleccionados < totalBoletosSeleccionados ||
      totalAsientosSeleccionados > totalBoletosSeleccionados
    ) {
      throw new Exception(
        "Es necesario que seleccione la misma cantidad de asientos que de boletos. Boletos seleccionados: " +
        totalBoletosSeleccionados
      );
    }
  }

  private void guardarAsientoReservadoEnFactura(
    int filaAsiento,
    int columnaAsiento
  ) {
    factura.setFilaAsientos(filaAsiento);
    factura.setColumnaAsientos(columnaAsiento);
  }

  private Cliente[][] agregarClientePorDefectoASala() {
    DefaultTableModel modeloTablaAsientosSeleccionados = (DefaultTableModel) tabla_asientosSeleccionados.getModel();
    Pelicula peliculaSeleccionada = factura.getPelicula();
    Cliente[][] salaCine = cine.getSala(peliculaSeleccionada.getNumeroSala());
    int codigoAsciiInicioAbecedario = 65;
    int codigoAsciiFinAbecedario = 90;

    for (
      int filaTabla = 0;
      filaTabla < modeloTablaAsientosSeleccionados.getRowCount();
      filaTabla++
    ) {
      String letraAsiento = Tabla_utilidades
        .obtenerDatoTabla(
          filaTabla,
          Identificador.COLUMNA1,
          modeloTablaAsientosSeleccionados
        )
        .toString();

      String numeroAsiento = Tabla_utilidades
        .obtenerDatoTabla(
          filaTabla,
          Identificador.COLUMNA2,
          modeloTablaAsientosSeleccionados
        )
        .toString();
      int filaSala = Convertidor_utilidades.convertirLetraAPosicionArreglo(
        letraAsiento.charAt(0)
      );
      int columnaSala = Integer.parseInt(numeroAsiento) - 1;

      salaCine[filaSala][columnaSala] = new Cliente();

      guardarAsientoReservadoEnFactura(filaSala, columnaSala);
    }

    return salaCine;
  }

  private void guardarSalaActualizada(Cliente[][] sala) {
    Pelicula peliculaSeleccionada = factura.getPelicula();
    cine.setSala(sala, peliculaSeleccionada.getNumeroSala());
  }

  private void agregarAniosComboAnioVencimientoTarjeta() {
    int[] listaAnios = Fecha_utilidades.obtenerListaAnios();
    String anioString;

    for (int anio : listaAnios) {
      anioString = String.valueOf(anio);
      combo_anioVencimientoTarjeta.addItem(anioString);
    }
  }

  private void cargarTotalAPagarEnPanelPagoBoletos() {
    double totalAPagar = factura.getCliente().getTotalPagado();
    txt_totalAPagar.setText(String.valueOf(totalAPagar));
  }

  private void btn_continuarSeleccionAsientosActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_continuarSeleccionAsientosActionPerformed
    Cliente[][] salaActualizada;
    try {
      validarAsientosReservados();
      salaActualizada = agregarClientePorDefectoASala();
      guardarSalaActualizada(salaActualizada);

      agregarAniosComboAnioVencimientoTarjeta();
      cargarTotalAPagarEnPanelPagoBoletos();
      cambiarDePanel(panel_pagoBoletos);
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(null, ex.getMessage());
    }
  }//GEN-LAST:event_btn_continuarSeleccionAsientosActionPerformed

  private void btn_atrasPagoBoletosActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_atrasPagoBoletosActionPerformed
    limpiarPagoBoleto();
    cambiarDePanel(panel_seleccionAsientos);
  }//GEN-LAST:event_btn_atrasPagoBoletosActionPerformed

  private void validarInsercionDatosPagoPelicula() throws Exception {
    if (txt_nombreCliente.getText().equals("")) {
      throw new Exception("Es necesario que digite el nombre del cliente");
    }

    if (txt_numeroTarjeta.getText().equals("")) {
      throw new Exception("Es necesario que digite el número de tarjeta");
    }
    
    if(txt_numeroTarjeta.getText().length() > 19){
        throw new Exception("La cantidad de digitos del numero de tarjeta es muy largo");
    }

    if (txt_codigoSeguridad.getText().equals("")) {
      throw new Exception(
        "Es necesario que digite el codigo de seguridad de la tarjeta"
      );
    }
    
    if(txt_codigoSeguridad.getText().length() > 3){
    
        throw new Exception("El codigo de seguridad debe de ser de 3 digitos.");
    
    }
  }

  private Cliente obtenerDatosCliente() {
    Cliente cliente = factura.getCliente();
    LocalDate fechaVencimientoTarjeta;
    String anioVencimientoTarjeta = combo_anioVencimientoTarjeta
      .getSelectedItem()
      .toString();
    int mesVencimientoTarjeta =
      combo_mesVencimientoTarjeta.getSelectedIndex() + 1;
    Identificador.tipoTarjeta tipoTarjeta = radio_visa.isSelected()
      ? Identificador.tipoTarjeta.VISA
      : Identificador.tipoTarjeta.MASTERCARD;

    fechaVencimientoTarjeta =
      LocalDate.of(
        Integer.parseInt(anioVencimientoTarjeta),
        mesVencimientoTarjeta,
        1
      );

    cliente.setNombre(txt_nombreCliente.getText());
    cliente.setNumeroReservacion(cine.getNumeroReservacion());
    cliente.setNumeroTarjeta(Long.parseLong(txt_numeroTarjeta.getText()));
    cliente.setFechaVencimiento(fechaVencimientoTarjeta);
    cliente.setCodigoSeguridadTarjeta(
      Integer.parseInt(txt_codigoSeguridad.getText())
    );
    cliente.setTipoTarjeta(tipoTarjeta);

    return cliente;
  }

  private String solicitarConfirmacionCompraAlUsuario() {
    String[] botones = { "Si", "No" };

    int opcionSeleccionada = JOptionPane.showOptionDialog(
      null,
      "¿Desea confirmar la compra?",
      "Seleccione una opción",
      JOptionPane.INFORMATION_MESSAGE,
      0,
      null,
      botones,
      botones[0]
    );

    return opcionSeleccionada == -1 ? "" : botones[opcionSeleccionada];
  }

  private void eliminarDatosFactura() {
    factura.eliminarDatos();
  }

  private void actualizarSalaCine(Cliente[][] sala, int numeroSala) {
    cine.setSala(sala, numeroSala);
  }

  private String mapearBoletosComprados() {
    Boleto[] boletosComprados = factura.getBoletosPelicula();
    String textoBoletosComprados = "";

    for (Boleto boleto : boletosComprados) {
      textoBoletosComprados +=
        boleto.getCantidadBoletos() + " " + boleto.getTipoPersona() + "  ";
    }

    return textoBoletosComprados;
  }

  private String mapearAsientosSeleccionados() {
    int[] filaAsientosSeleccionados = factura.getFilasAsientos();
    int[] numeroAsientosSeleccionados = factura.getColumnasAsientos();
    Boleto[] boletosComprados = factura.getBoletosPelicula();
    String textoAsientosSeleccionados = "";

    for (
      int numeroFilaAsientos = 0;
      numeroFilaAsientos < filaAsientosSeleccionados.length;
      numeroFilaAsientos++
    ) {
      String letraFilaAsientos = String.valueOf(
        (char) ('A' + filaAsientosSeleccionados[numeroFilaAsientos])
      );
      int numeroAsiento = numeroAsientosSeleccionados[numeroFilaAsientos];

      if (numeroFilaAsientos == filaAsientosSeleccionados.length - 1) {
        textoAsientosSeleccionados += letraFilaAsientos + numeroAsiento;
      } else {
        textoAsientosSeleccionados += letraFilaAsientos + numeroAsiento + ", ";
      }
    }

    return textoAsientosSeleccionados;
  }

  private String obtenerMascaraTarjeta(long numeroTarjeta) {
    String numeroTarjetaString = String.valueOf(numeroTarjeta);
    String[] digitosTarjetaAMostrar = new String[numeroTarjetaString.length()];
    int posicionInicioUltimosTresDigitos = numeroTarjetaString.length() - 3;
    String[] arregloActualDigitosTarjeta = numeroTarjetaString.split("");
    String numeroTarjetaAMostrar = "";

    for (int i = 0; i < numeroTarjetaString.length(); i++) {
      if (i >= posicionInicioUltimosTresDigitos - 1) {
        digitosTarjetaAMostrar[i] = arregloActualDigitosTarjeta[i];
      } else {
        digitosTarjetaAMostrar[i] = "X";
      }
    }

    for (String caracter : digitosTarjetaAMostrar) {
      numeroTarjetaAMostrar += caracter;
    }

    return numeroTarjetaAMostrar;
  }

  private void cargarDatosPanelFactura() {
    String tipoTarjeta = factura.getCliente().getTipoTarjeta() ==
      Identificador.tipoTarjeta.VISA
      ? "Visa"
      : "Mastercard";
    label_facturaNumeroReservacion.setText(
      String.valueOf(factura.getCliente().getNumeroReservacion())
    );
    label_facturaFecha.setText(String.valueOf(factura.getFechaActual()));
    label_facturaNombreCliente.setText(
      String.valueOf(factura.getCliente().getNombre())
    );
    label_facturaTarjeta.setText(
      obtenerMascaraTarjeta(factura.getCliente().getNumeroTarjeta())
    );
    label_facturaNumeroSala.setText(
      String.valueOf(factura.getPelicula().getNumeroSala() + 1)
    );
    label_facturaNombrePelicula.setText(factura.getPelicula().getNombre());
    label_facturaTiquetesComprados.setText(mapearBoletosComprados());
    label_facturaAsientosSeleccionados.setText(mapearAsientosSeleccionados());
    label_facturaTotalPagado.setText(
      String.valueOf(factura.getCliente().getTotalPagado())
    );
  }

  private void actualizarNumeroReservacion() {
    cine.incrementarNumeroReservacion();
  }

  private void procesarOpcionConfirmacionCompra(
    String opcionConfirmacionCompra,
    Cliente cliente
  )
    throws Exception {
    Pelicula peliculaSeleccionada = factura.getPelicula();
    Cliente[][] salaCineActualizada;
    JPanel panelAMostrar = null;

    if (opcionConfirmacionCompra.equals("")) return;

    if (opcionConfirmacionCompra.equals("Si")) {
      salaCineActualizada =
        cine.confirmarCompra(cliente, peliculaSeleccionada.getNumeroSala());
      actualizarSalaCine(
        salaCineActualizada,
        peliculaSeleccionada.getNumeroSala()
      );

      cargarDatosPanelFactura();
      panelAMostrar = panel_factura;
    }

    if (opcionConfirmacionCompra.equals("No")) {
      cine.rechazarCompra(peliculaSeleccionada.getNumeroSala());
      panelAMostrar = panel_seleccionarPelicula;
    }

    actualizarNumeroReservacion();
    eliminarDatosFactura();
    limpiarCamposVentanasAnteriores();
    cambiarDePanel(panelAMostrar);
  }

  private void btn_continuarPagoActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_continuarPagoActionPerformed
    String opcionConfirmacionCompra;
    Cliente cliente;
    try {
      validarInsercionDatosPagoPelicula();
      cliente = obtenerDatosCliente();
      cliente.validarDatosTarjeta();
      opcionConfirmacionCompra = solicitarConfirmacionCompraAlUsuario();
      procesarOpcionConfirmacionCompra(opcionConfirmacionCompra, cliente);
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(null, ex.getMessage());
    }
  }//GEN-LAST:event_btn_continuarPagoActionPerformed

  private void limpiarCamposVentanasAnteriores() {
    limpiarSeleccionPelicula();

    limpiarSeleccionAsientos();
    limpiarPagoBoleto();

    factura.eliminarDatos();
  }

  private void btn_finalizarCompraActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_finalizarCompraActionPerformed
    cambiarDePanel(panel_seleccionarPelicula);
  }//GEN-LAST:event_btn_finalizarCompraActionPerformed

  private int obtenerFilaSeleccionadaTablaPeliculasRegistradas()
    throws Exception {
    int filaSeleccionada = tabla_peliculasRegistradas.getSelectedRow();

    if (filaSeleccionada == -1) {
      throw new Exception(
        "Es necesario seleccionar la película para eliminarla."
      );
    }

    return filaSeleccionada;
  }

  private void btn_eliminarPeliculaActionPerformed(
    java.awt.event.ActionEvent evt
  ) {//GEN-FIRST:event_btn_eliminarPeliculaActionPerformed
    try {
      DefaultTableModel modeloTablaPeliculasRegistradas = (DefaultTableModel) tabla_peliculasRegistradas.getModel();
      int filaSeleccionadaTabla = obtenerFilaSeleccionadaTablaPeliculasRegistradas();
      String nombrePeliculaAEliminar = Tabla_utilidades
        .obtenerDatoTabla(
          filaSeleccionadaTabla,
          Identificador.COLUMNA1,
          modeloTablaPeliculasRegistradas
        )
        .toString();
      cine.eliminarPelicula(nombrePeliculaAEliminar);
      actualizarTablaPeliculasRegistradas();
    } catch (Exception e) {
      JOptionPane.showMessageDialog(null, e.getMessage());
    }
  }//GEN-LAST:event_btn_eliminarPeliculaActionPerformed

  private void txt_totalBoletosAdultosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_totalBoletosAdultosKeyTyped
    JtextField_utilidades.validarIngresoNumeros(evt);
  }//GEN-LAST:event_txt_totalBoletosAdultosKeyTyped

  private void txt_totalBoletosAdultosMayoresKeyTyped(
    java.awt.event.KeyEvent evt
  ) {//GEN-FIRST:event_txt_totalBoletosAdultosMayoresKeyTyped
    JtextField_utilidades.validarIngresoNumeros(evt);
  }//GEN-LAST:event_txt_totalBoletosAdultosMayoresKeyTyped

  private void txt_totalBoletosNiniosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_totalBoletosNiniosKeyTyped
    JtextField_utilidades.validarIngresoNumeros(evt);
  }//GEN-LAST:event_txt_totalBoletosNiniosKeyTyped

  private void txt_totalBoletosAdultosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_totalBoletosAdultosKeyReleased
      try {
          actualizarPrecioTotalBoletos();
      } catch (Exception ex) {
          JOptionPane.showMessageDialog(null, ex.getMessage());
      }
  }//GEN-LAST:event_txt_totalBoletosAdultosKeyReleased

  private void txt_totalBoletosAdultosMayoresKeyReleased(
    java.awt.event.KeyEvent evt
  ) {//GEN-FIRST:event_txt_totalBoletosAdultosMayoresKeyReleased
      try {
          actualizarPrecioTotalBoletos();
      } catch (Exception ex) {
          JOptionPane.showMessageDialog(null, ex.getMessage());
      }
  }//GEN-LAST:event_txt_totalBoletosAdultosMayoresKeyReleased

  private void txt_totalBoletosNiniosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_totalBoletosNiniosKeyReleased
      try {
          actualizarPrecioTotalBoletos();
      } catch (Exception ex) {
          JOptionPane.showMessageDialog(null, ex.getMessage());
      }
  }//GEN-LAST:event_txt_totalBoletosNiniosKeyReleased

  private void txt_numeroTarjetaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_numeroTarjetaKeyTyped
    JtextField_utilidades.validarIngresoNumeros(evt);
  }//GEN-LAST:event_txt_numeroTarjetaKeyTyped

  private void txt_codigoSeguridadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoSeguridadKeyTyped
    JtextField_utilidades.validarIngresoNumeros(evt);
  }//GEN-LAST:event_txt_codigoSeguridadKeyTyped

  private void limpiarSeleccionPelicula() {
    tabla_seleccionPelicula.clearSelection();
    txt_totalBoletosAdultos.setText("0");
    txt_totalBoletosAdultosMayores.setText("0");
    txt_totalBoletosNinios.setText("0");
    txt_montoTotalBoletos.setText("0.0");
  }

  private void limpiarPagoBoleto() {
    txt_nombreCliente.setText("");
    radio_visa.setSelected(true);
    txt_numeroTarjeta.setText("");
    txt_codigoSeguridad.setText("");
    combo_mesVencimientoTarjeta.setSelectedIndex(0);
    combo_anioVencimientoTarjeta.removeAllItems();
    txt_totalAPagar.setText("");
  }

  private void limpiarSeleccionAsientos() {
    Tabla_utilidades.limpiarDatosTabla(tabla_seleccionAsientos);
    Tabla_utilidades.limpiarDatosTabla(tabla_asientosSeleccionados);
  }

  private void limpiarEstadoPelicula() {
    combo_SalaARevisar.setSelectedIndex(0);
    Tabla_utilidades.limpiarDatosTabla(tabla_asientosSala);
    label_asientosOcupados.setText("0");
    label_asientosDisponibles.setText("0");
  }

  private void limpiarIngresosPorSala() {
    txt_ingresosSala1.setText("0");
    txt_ingresosSala2.setText("0");
    txt_ingresosSala3.setText("0");
  }

  private void limpiarAsietosReservados() {
    txt_asientosReservadosSala1.setText("0");
    txt_asientosReservadosSala2.setText("0");
    txt_asientosReservadosSala3.setText("0");
  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger
        .getLogger(Principal.class.getName())
        .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger
        .getLogger(Principal.class.getName())
        .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger
        .getLogger(Principal.class.getName())
        .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger
        .getLogger(Principal.class.getName())
        .log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(
      new Runnable() {
        public void run() {
          new Principal().setVisible(true);
        }
      }
    );
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_agregarPelicula;
    private javax.swing.JButton btn_atrasAsientosReservados;
    private javax.swing.JButton btn_atrasEstadoPelicula;
    private javax.swing.JButton btn_atrasIngresoPelicula;
    private javax.swing.JButton btn_atrasIngresoSalas;
    private javax.swing.JButton btn_atrasMenuAdministrador;
    private javax.swing.JButton btn_atrasPagoBoletos;
    private javax.swing.JButton btn_atrasReservaPelicula;
    private javax.swing.JButton btn_atrasSeleccionAsientos;
    private javax.swing.JButton btn_cliente;
    private javax.swing.JButton btn_continuarPago;
    private javax.swing.JButton btn_continuarReservaPelicula;
    private javax.swing.JButton btn_continuarSeleccionAsientos;
    private javax.swing.JButton btn_definirCartelera;
    private javax.swing.JButton btn_eliminarAsientoSeleccionado;
    private javax.swing.JButton btn_eliminarPelicula;
    private javax.swing.JButton btn_estadoSalas;
    private javax.swing.JButton btn_finalizarCompra;
    private javax.swing.JButton btn_limpiarCampos;
    private javax.swing.JButton btn_menuAdministrador;
    private javax.swing.JButton btn_obtenerDatosSala;
    private javax.swing.JButton btn_reporteAsientos;
    private javax.swing.JButton btn_reporteIngresos;
    private javax.swing.JButton btn_seleccionarAsiento;
    private javax.swing.JComboBox<String> combo_SalaARevisar;
    private javax.swing.JComboBox<String> combo_anioInicioPelicula;
    private javax.swing.JComboBox<String> combo_anioVencimientoTarjeta;
    private javax.swing.JComboBox<String> combo_mesInicioPelicula;
    private javax.swing.JComboBox<String> combo_mesVencimientoTarjeta;
    private javax.swing.JComboBox<String> combo_numeroSala;
    private javax.swing.ButtonGroup group_tipoTarjeta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel label_asientosDisponibles;
    private javax.swing.JLabel label_asientosOcupados;
    private javax.swing.JLabel label_facturaAsientosSeleccionados;
    private javax.swing.JLabel label_facturaFecha;
    private javax.swing.JLabel label_facturaNombreCliente;
    private javax.swing.JLabel label_facturaNombrePelicula;
    private javax.swing.JLabel label_facturaNumeroReservacion;
    private javax.swing.JLabel label_facturaNumeroSala;
    private javax.swing.JLabel label_facturaTarjeta;
    private javax.swing.JLabel label_facturaTiquetesComprados;
    private javax.swing.JLabel label_facturaTotalPagado;
    private javax.swing.JPanel panel_asientosReservados;
    private javax.swing.JPanel panel_estadoSala;
    private javax.swing.JPanel panel_factura;
    private javax.swing.JPanel panel_ingresoDatosPelicula;
    private javax.swing.JPanel panel_ingresosPorSala;
    private javax.swing.JPanel panel_menuPrincipal;
    private javax.swing.JPanel panel_menu_administrador;
    private javax.swing.JPanel panel_pagoBoletos;
    private javax.swing.JPanel panel_seleccionAsientos;
    private javax.swing.JPanel panel_seleccionarPelicula;
    private javax.swing.JRadioButton radio_mastercard;
    private javax.swing.JRadioButton radio_visa;
    private javax.swing.JTable tabla_asientosSala;
    private javax.swing.JTable tabla_asientosSeleccionados;
    private javax.swing.JTable tabla_peliculasRegistradas;
    private javax.swing.JTable tabla_seleccionAsientos;
    private javax.swing.JTable tabla_seleccionPelicula;
    private javax.swing.JTextField txt_asientosReservadosSala1;
    private javax.swing.JTextField txt_asientosReservadosSala2;
    private javax.swing.JTextField txt_asientosReservadosSala3;
    private javax.swing.JTextField txt_codigoSeguridad;
    private javax.swing.JTextField txt_ingresosSala1;
    private javax.swing.JTextField txt_ingresosSala2;
    private javax.swing.JTextField txt_ingresosSala3;
    private javax.swing.JTextField txt_montoTotalBoletos;
    private javax.swing.JTextField txt_nombreCliente;
    private javax.swing.JTextField txt_nombrePelicula;
    private javax.swing.JTextField txt_numeroTarjeta;
    private javax.swing.JTextField txt_totalAPagar;
    private javax.swing.JTextField txt_totalBoletosAdultos;
    private javax.swing.JTextField txt_totalBoletosAdultosMayores;
    private javax.swing.JTextField txt_totalBoletosNinios;
    // End of variables declaration//GEN-END:variables
}
